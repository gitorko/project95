apiVersion: apps/v1
kind: Deployment
metadata:
  name: project95-dep
  labels:
    app: project95-dep
spec:
  selector:
      matchLabels:
        app: project95-dep
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: project95-dep
    spec:
      containers:
        - name: project95
          image: project95:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "1"
              memory: "500Mi"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: test-db
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test@123
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/tmp/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: db-server
    spec:
      containers:
        - name: db-server
          image: postgres:9.6.10
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  selector:
    matchLabels:
      app: db-server
---
apiVersion: v1
kind: Service
metadata:
  name: db-server
  labels:
    app: db-server
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: db-server
---
apiVersion: v1
kind: Service
metadata:
  name: project95
  labels:
    app: project95
spec:
  type: ClusterIP
  ports:
    - port: 8080
  selector:
    app: project95
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: test-ratelimit
spec:
  plugin:
    rateLimit:
      average: 1
      burst: 5
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: myingressroute
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`my.laptop`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - kind: Service
          name: project95
          port: 8080
      middlewares:
        - name: test-ratelimit
